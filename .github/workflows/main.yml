name: Escaneo de vulnerabilidades

on: push

env:
  DEFECTDOJO_SERVER : http://ec2-3-128-87-52.us-east-2.compute.amazonaws.com:8080


jobs:
  wpscan:
    runs-on: ubuntu-latest
    steps:
      - name: WPScan
        run: |
             sudo apt install ruby
             sudo apt install build-essential libcurl4-openssl-dev libxml2 libxml2-dev libxslt1-dev ruby-dev  libgmp-dev zlib1g-dev
             sudo gem install wpscan
             sudo wpscan --update
      - name: Scan Results
        run: |
             sudo wpscan --url www.unso.edu.ar --disable-tls-checks --api-token jFrzZHnIqAJ02cS97a5F3zLw0eS7sI8oozF8YtVrtdE --output=report.json
    
#           echo ${{ steps.wpscan.outputs.result }} > result.json
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Wpscan Report
           path: ${{github.workspace}}/
           
  EngagementWPScan:
    name: Create engagement WPScan
    runs-on: ubuntu-latest
    needs: wpscan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: SHA-Branch
        id: vars
        shell: bash
        run: |
              echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
              echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: curlimages/curl
          run: | 
                curl -X 'POST' \
                '${{ env.DEFECTDOJO_SERVER }}/api/v2/engagements/' \
                 -H 'accept: application/json' \
                 -H 'Content-Type: application/json' \
                 -H 'X-CSRFTOKEN: tJY9NWtnlqurzkvzn9R4y0uK6TOV5W2gHEU2qllNpdsaQEsd3vC9zrOtpbabmHTZ' \
                 -H "Authorization: Token 7ceb84a28a87cff4088eeefd1e82b843fe5dd50f" \
                 -d '{
                  "name":"WPScan_#${{ steps.vars.outputs.sha_short }}_${{ steps.vars.outputs.branch }}",
                  "engagement_type": "CI/CD",
                  "target_start": "${{ steps.date.outputs.date }}",
                  "target_end": "${{ steps.date.outputs.date }}",
                  "product": 1
                  }'
                  
  PublishFindingsWPScan:
    name: Publish findings WPScan
    runs-on: ubuntu-latest
    needs: EngagementWPScan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: SHA-Branch
        id: vars
        shell: bash
        run: |
              echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
              echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - uses: actions/download-artifact@v2
        with:
            name: Wpscan Report
      - name: Upload report
        run: |
              curl -X POST '${{ env.DEFECTDOJO_SERVER }}/api/v2/import-scan/' \
              -H  "accept: application/json" \
              -H  "Content-Type: multipart/form-data" \
              -H  "X-CSRFToken: ujMSwx6OazuMFYFeovC7SFWNZ4MeCRS7dqRYTlAHYXBDCGvw5aoC2iWR9m5UCwts" \
              -H "Authorization: Token 7ceb84a28a87cff4088eeefd1e82b843fe5dd50f" \
              -F "scan_date=${{ steps.date.outputs.date }}" \
              -F "minimum_severity=Info" \
              -F "active=true" \
              -F "verified=false" \
              -F "scan_type=Wpscan" \
              -F "product_name=unso" \
              -F "file=@result.json;type=text/json" \
              -F "engagement_name=WPScan_#${{ steps.vars.outputs.sha_short }}_${{ steps.vars.outputs.branch }}" \
              -F "close_old_findings=true" \
              -F "push_to_jira=false"
